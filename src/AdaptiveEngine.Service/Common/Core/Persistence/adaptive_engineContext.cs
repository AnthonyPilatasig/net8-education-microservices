// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using AdaptiveEngine.Service.Domain.Content;
using Microsoft.EntityFrameworkCore;

namespace AdaptiveEngine.Service.Common.Core.Persistence;

public partial class adaptive_engineContext : DbContext
{
    public adaptive_engineContext(DbContextOptions<adaptive_engineContext> options)
        : base(options)
    {
    }

    public virtual DbSet<EstilosAprendizaje> EstilosAprendizaje { get; set; }

    public virtual DbSet<ModelosAprendizaje> ModelosAprendizaje { get; set; }

    public virtual DbSet<PerfilesEstudiantes> PerfilesEstudiantes { get; set; }

    public virtual DbSet<Recomendaciones> Recomendaciones { get; set; }

    public virtual DbSet<TiposRecomendacion> TiposRecomendacion { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<EstilosAprendizaje>(entity =>
        {
            entity.HasKey(e => e.IdEstilosAprendizaje).HasName("PRIMARY");

            entity.ToTable("estilos_aprendizaje");

            entity.Property(e => e.IdEstilosAprendizaje).HasColumnName("idEstilosAprendizaje");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .HasColumnName("descripcion");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.NombreEstilo)
                .HasMaxLength(150)
                .HasColumnName("nombre_estilo");
        });

        modelBuilder.Entity<ModelosAprendizaje>(entity =>
        {
            entity.HasKey(e => e.IdModelosAprendizaje).HasName("PRIMARY");

            entity.ToTable("modelos_aprendizaje");

            entity.Property(e => e.IdModelosAprendizaje).HasColumnName("idModelosAprendizaje");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.EstadoModelo)
                .HasMaxLength(50)
                .HasDefaultValueSql("'ENTRENADO'")
                .HasColumnName("estado_modelo");
            entity.Property(e => e.FechaEntrenamiento)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_entrenamiento");
            entity.Property(e => e.NombreModelo)
                .HasMaxLength(150)
                .HasColumnName("nombre_modelo");
            entity.Property(e => e.ParametrosJson)
                .HasColumnType("json")
                .HasColumnName("parametros_json");
            entity.Property(e => e.PrecisionModelo)
                .HasPrecision(5, 4)
                .HasColumnName("precision_modelo");
            entity.Property(e => e.VersionModelo)
                .HasMaxLength(50)
                .HasColumnName("version_modelo");
        });

        modelBuilder.Entity<PerfilesEstudiantes>(entity =>
        {
            entity.HasKey(e => e.IdPerfilesEstudiantes).HasName("PRIMARY");

            entity.ToTable("perfiles_estudiantes");

            entity.HasIndex(e => e.IdEstilosAprendizaje, "fk_perfiles_estudiantes_estilos_aprendizaje_idx");

            entity.Property(e => e.IdPerfilesEstudiantes).HasColumnName("idPerfilesEstudiantes");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.FechaActualizacion)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_actualizacion");
            entity.Property(e => e.IdEstilosAprendizaje).HasColumnName("idEstilosAprendizaje");
            entity.Property(e => e.IdEstudiante)
                .IsRequired()
                .HasMaxLength(12)
                .HasColumnName("idEstudiante");
            entity.Property(e => e.NivelActual)
                .HasPrecision(4, 2)
                .HasColumnName("nivel_actual");
            entity.Property(e => e.VelocidadAprendizaje)
                .HasPrecision(4, 2)
                .HasColumnName("velocidad_aprendizaje");

            entity.HasOne(d => d.IdEstilosAprendizajeNavigation).WithMany(p => p.PerfilesEstudiantes)
                .HasForeignKey(d => d.IdEstilosAprendizaje)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_perfiles_estudiantes_estilos_aprendizaje");
        });

        modelBuilder.Entity<Recomendaciones>(entity =>
        {
            entity.HasKey(e => e.IdRecomendaciones).HasName("PRIMARY");

            entity.ToTable("recomendaciones");

            entity.HasIndex(e => e.IdTiposRecomendacion, "fk_recomendaciones_tipos_recomendacion1_idx");

            entity.Property(e => e.IdRecomendaciones).HasColumnName("idRecomendaciones");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.EstadoRecomendacion)
                .HasMaxLength(50)
                .HasDefaultValueSql("'Pendiente'")
                .HasColumnName("estado_recomendacion");
            entity.Property(e => e.FechaGeneracion)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_generacion");
            entity.Property(e => e.IdContenido).HasColumnName("idContenido");
            entity.Property(e => e.IdEstudiante)
                .IsRequired()
                .HasMaxLength(12)
                .HasColumnName("idEstudiante");
            entity.Property(e => e.IdTiposRecomendacion).HasColumnName("idTiposRecomendacion");
            entity.Property(e => e.PuntajeConfianza)
                .HasPrecision(5, 2)
                .HasColumnName("puntaje_confianza");

            entity.HasOne(d => d.IdTiposRecomendacionNavigation).WithMany(p => p.Recomendaciones)
                .HasForeignKey(d => d.IdTiposRecomendacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_recomendaciones_tipos_recomendacion1");
        });

        modelBuilder.Entity<TiposRecomendacion>(entity =>
        {
            entity.HasKey(e => e.IdTiposRecomendacion).HasName("PRIMARY");

            entity.ToTable("tipos_recomendacion");

            entity.Property(e => e.IdTiposRecomendacion).HasColumnName("idTiposRecomendacion");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .HasColumnName("descripcion");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.NombreTipo)
                .HasMaxLength(90)
                .HasColumnName("nombre_tipo");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}