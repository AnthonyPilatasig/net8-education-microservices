// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using ContentPersonalization.Service.Domain.Content;
using Microsoft.EntityFrameworkCore;

namespace ContentPersonalization.Service.Common.Core.Persistence;

public partial class content_personalizationContext : DbContext
{
    public content_personalizationContext(DbContextOptions<content_personalizationContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ContenidosEducativos> ContenidosEducativos { get; set; }

    public virtual DbSet<EstadosRuta> EstadosRuta { get; set; }

    public virtual DbSet<ModelosRuta> ModelosRuta { get; set; }

    public virtual DbSet<NivelesDificultad> NivelesDificultad { get; set; }

    public virtual DbSet<RutasAprendizaje> RutasAprendizaje { get; set; }

    public virtual DbSet<TiposContenido> TiposContenido { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<ContenidosEducativos>(entity =>
        {
            entity.HasKey(e => e.IdContenidosEducativos).HasName("PRIMARY");

            entity.ToTable("contenidos_educativos");

            entity.HasIndex(e => e.CodigoContenido, "codigo_contenido_UNIQUE").IsUnique();

            entity.HasIndex(e => e.IdNivelesDificultad, "fk_contenidos_educativos_niveles_dificultad1_idx");

            entity.HasIndex(e => e.IdTiposContenido, "fk_contenidos_educativos_tipos_contenido_idx");

            entity.Property(e => e.IdContenidosEducativos).HasColumnName("idContenidosEducativos");
            entity.Property(e => e.CodigoContenido)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("codigo_contenido");
            entity.Property(e => e.DuracionMinutos).HasColumnName("duracion_minutos");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.EtiquetasJson)
                .HasColumnType("json")
                .HasColumnName("etiquetas_json");
            entity.Property(e => e.IdNivelesDificultad).HasColumnName("idNivelesDificultad");
            entity.Property(e => e.IdTiposContenido).HasColumnName("idTiposContenido");
            entity.Property(e => e.Titulo)
                .IsRequired()
                .HasMaxLength(300)
                .HasColumnName("titulo");
            entity.Property(e => e.UrlRecurso)
                .HasMaxLength(500)
                .HasColumnName("url_recurso");

            entity.HasOne(d => d.IdNivelesDificultadNavigation).WithMany(p => p.ContenidosEducativos)
                .HasForeignKey(d => d.IdNivelesDificultad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_contenidos_educativos_niveles_dificultad1");

            entity.HasOne(d => d.IdTiposContenidoNavigation).WithMany(p => p.ContenidosEducativos)
                .HasForeignKey(d => d.IdTiposContenido)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_contenidos_educativos_tipos_contenido");
        });

        modelBuilder.Entity<EstadosRuta>(entity =>
        {
            entity.HasKey(e => e.IdEstadosRuta).HasName("PRIMARY");

            entity.ToTable("estados_ruta");

            entity.Property(e => e.IdEstadosRuta).HasColumnName("idEstadosRuta");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .HasColumnName("descripcion");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.NombreEstado)
                .IsRequired()
                .HasMaxLength(90)
                .HasColumnName("nombre_estado");
        });

        modelBuilder.Entity<ModelosRuta>(entity =>
        {
            entity.HasKey(e => e.IdModelosRuta).HasName("PRIMARY");

            entity.ToTable("modelos_ruta");

            entity.HasIndex(e => e.IdRutasAprendizaje, "fk_modelos_ruta_rutas_aprendizaje1_idx");

            entity.Property(e => e.IdModelosRuta).HasColumnName("idModelosRuta");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.FechaAsignacion)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_asignacion");
            entity.Property(e => e.FechaCompletacion)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_completacion");
            entity.Property(e => e.IdContenido).HasColumnName("idContenido");
            entity.Property(e => e.IdRutasAprendizaje).HasColumnName("idRutasAprendizaje");
            entity.Property(e => e.OrdenModulo).HasColumnName("orden_modulo");

            entity.HasOne(d => d.IdRutasAprendizajeNavigation).WithMany(p => p.ModelosRuta)
                .HasForeignKey(d => d.IdRutasAprendizaje)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_modelos_ruta_rutas_aprendizaje1");
        });

        modelBuilder.Entity<NivelesDificultad>(entity =>
        {
            entity.HasKey(e => e.IdNivelesDificultad).HasName("PRIMARY");

            entity.ToTable("niveles_dificultad");

            entity.Property(e => e.IdNivelesDificultad).HasColumnName("idNivelesDificultad");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.NombreNivel)
                .IsRequired()
                .HasMaxLength(90)
                .HasColumnName("nombre_nivel");
            entity.Property(e => e.ValorMaximo)
                .HasPrecision(4, 2)
                .HasColumnName("valor_maximo");
            entity.Property(e => e.ValorMinimo)
                .HasPrecision(4, 2)
                .HasColumnName("valor_minimo");
        });

        modelBuilder.Entity<RutasAprendizaje>(entity =>
        {
            entity.HasKey(e => e.IdRutasAprendizaje).HasName("PRIMARY");

            entity.ToTable("rutas_aprendizaje");

            entity.HasIndex(e => e.IdEstadosRuta, "fk_rutas_aprendizaje_estados_ruta1_idx");

            entity.Property(e => e.IdRutasAprendizaje).HasColumnName("idRutasAprendizaje");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.FechaActualizacion)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_actualizacion");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_creacion");
            entity.Property(e => e.IdEstadosRuta).HasColumnName("idEstadosRuta");
            entity.Property(e => e.IdEstudiante)
                .IsRequired()
                .HasMaxLength(12)
                .HasColumnName("idEstudiante");
            entity.Property(e => e.NombreRuta)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("nombre_ruta");

            entity.HasOne(d => d.IdEstadosRutaNavigation).WithMany(p => p.RutasAprendizaje)
                .HasForeignKey(d => d.IdEstadosRuta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_rutas_aprendizaje_estados_ruta1");
        });

        modelBuilder.Entity<TiposContenido>(entity =>
        {
            entity.HasKey(e => e.IdTiposContenido).HasName("PRIMARY");

            entity.ToTable("tipos_contenido");

            entity.Property(e => e.IdTiposContenido).HasColumnName("idTiposContenido");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .HasColumnName("descripcion");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.NombreTipo)
                .IsRequired()
                .HasMaxLength(90)
                .HasColumnName("nombre_tipo");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}