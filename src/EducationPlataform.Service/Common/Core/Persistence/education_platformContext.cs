// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using EducationPlataform.Service.Domain.Education;
using Microsoft.EntityFrameworkCore;

namespace EducationPlataform.Service.Common.Core.Persistence;

public partial class education_platformContext : DbContext
{
    public education_platformContext(DbContextOptions<education_platformContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Cursos> Cursos { get; set; }

    public virtual DbSet<Estudiantes> Estudiantes { get; set; }

    public virtual DbSet<Inscripciones> Inscripciones { get; set; }

    public virtual DbSet<UsuarioEstudiante> UsuarioEstudiante { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<Cursos>(entity =>
        {
            entity.HasKey(e => e.IdCursos).HasName("PRIMARY");

            entity.ToTable("cursos");

            entity.HasIndex(e => e.CodigoCurso, "codigo_curso_UNIQUE").IsUnique();

            entity.Property(e => e.IdCursos).HasColumnName("idCursos");
            entity.Property(e => e.Categoria)
                .HasMaxLength(100)
                .HasColumnName("categoria");
            entity.Property(e => e.CodigoCurso)
                .IsRequired()
                .HasMaxLength(20)
                .HasColumnName("codigo_curso");
            entity.Property(e => e.Descripcion)
                .HasColumnType("text")
                .HasColumnName("descripcion");
            entity.Property(e => e.DuracionHoras)
                .HasPrecision(5, 2)
                .HasColumnName("duracion_horas");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.NivelDificultad)
                .HasMaxLength(50)
                .HasColumnName("nivel_dificultad");
            entity.Property(e => e.NombreCurso)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("nombre_curso");
        });

        modelBuilder.Entity<Estudiantes>(entity =>
        {
            entity.HasKey(e => e.IdEstudiante).HasName("PRIMARY");

            entity.ToTable("estudiantes");

            entity.HasIndex(e => e.IdEstudiante, "idEstudiante_UNIQUE").IsUnique();

            entity.Property(e => e.IdEstudiante)
                .HasMaxLength(12)
                .HasColumnName("idEstudiante");
            entity.Property(e => e.CodigoEstudiante)
                .HasMaxLength(20)
                .HasColumnName("codigo_estudiante");
            entity.Property(e => e.Email)
                .HasMaxLength(150)
                .HasColumnName("email");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.FechaRegistro)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_registro");
            entity.Property(e => e.PrimerApellido)
                .HasMaxLength(100)
                .HasColumnName("primer_apellido");
            entity.Property(e => e.PrimerNombre)
                .HasMaxLength(100)
                .HasColumnName("primer_nombre");
            entity.Property(e => e.SegundoApellido)
                .HasMaxLength(100)
                .HasColumnName("segundo_apellido");
            entity.Property(e => e.SegundoNombre)
                .HasMaxLength(100)
                .HasColumnName("segundo_nombre");
        });

        modelBuilder.Entity<Inscripciones>(entity =>
        {
            entity.HasKey(e => e.IdInscripciones).HasName("PRIMARY");

            entity.ToTable("inscripciones");

            entity.HasIndex(e => e.IdCursos, "fk_inscripciones_cursos1_idx");

            entity.HasIndex(e => e.IdEstudiante, "fk_inscripciones_usuario_estudiante1_idx");

            entity.Property(e => e.IdInscripciones).HasColumnName("idInscripciones");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.EstadoInscripcion)
                .HasMaxLength(50)
                .HasDefaultValueSql("'ACTIVA'")
                .HasColumnName("estado_inscripcion");
            entity.Property(e => e.FechaInscripcion)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_inscripcion");
            entity.Property(e => e.IdCursos).HasColumnName("idCursos");
            entity.Property(e => e.IdEstudiante)
                .IsRequired()
                .HasMaxLength(12)
                .HasColumnName("idEstudiante");
            entity.Property(e => e.ProgresoPorcentaje)
                .HasPrecision(5, 2)
                .HasDefaultValueSql("'0.00'")
                .HasColumnName("progreso_porcentaje");

            entity.HasOne(d => d.IdCursosNavigation).WithMany(p => p.Inscripciones)
                .HasForeignKey(d => d.IdCursos)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_inscripciones_cursos1");

            entity.HasOne(d => d.IdEstudianteNavigation).WithMany(p => p.Inscripciones)
                .HasForeignKey(d => d.IdEstudiante)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_inscripciones_usuario_estudiante1");
        });

        modelBuilder.Entity<UsuarioEstudiante>(entity =>
        {
            entity.HasKey(e => e.IdEstudiante).HasName("PRIMARY");

            entity.ToTable("usuario_estudiante");

            entity.HasIndex(e => e.IdEstudiante, "fk_usuario_estudiante_estudiantes_idx").IsUnique();

            entity.Property(e => e.IdEstudiante)
                .HasMaxLength(12)
                .HasColumnName("idEstudiante");
            entity.Property(e => e.Contraseña)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("contraseña");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_creacion");

            entity.HasOne(d => d.IdEstudianteNavigation).WithOne(p => p.UsuarioEstudiante)
                .HasForeignKey<UsuarioEstudiante>(d => d.IdEstudiante)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_usuario_estudiante_estudiantes");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}