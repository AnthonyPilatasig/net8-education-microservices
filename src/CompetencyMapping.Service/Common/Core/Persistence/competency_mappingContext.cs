// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using CompetencyMapping.Service.Domain.Competency;
using Microsoft.EntityFrameworkCore;

namespace CompetencyMapping.Service.Common.Core.Persistence;

public partial class competency_mappingContext : DbContext
{
    public competency_mappingContext(DbContextOptions<competency_mappingContext> options)
        : base(options)
    {
    }

    public virtual DbSet<BrechasAprendizaje> BrechasAprendizaje { get; set; }

    public virtual DbSet<CategoriasCompetencia> CategoriasCompetencia { get; set; }

    public virtual DbSet<EstadosDominio> EstadosDominio { get; set; }

    public virtual DbSet<MapaCompetenciasEstudiante> MapaCompetenciasEstudiante { get; set; }

    public virtual DbSet<NivelesPrioridad> NivelesPrioridad { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<BrechasAprendizaje>(entity =>
        {
            entity.HasKey(e => e.IdBrechasAprendizaje).HasName("PRIMARY");

            entity.ToTable("brechas_aprendizaje");

            entity.HasIndex(e => e.IdCompetencias, "fk_brechas_aprendizaje_Competencias1_idx");

            entity.HasIndex(e => e.IdNivelesPrioridad, "fk_brechas_aprendizaje_niveles_prioridad1_idx");

            entity.Property(e => e.IdBrechasAprendizaje).HasColumnName("idBrechasAprendizaje");
            entity.Property(e => e.EsActiva).HasColumnName("es_activa");
            entity.Property(e => e.FechaDeteccion)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_deteccion");
            entity.Property(e => e.IdCompetencias).HasColumnName("idCompetencias");
            entity.Property(e => e.IdEstudiante)
                .IsRequired()
                .HasMaxLength(12)
                .HasColumnName("idEstudiante");
            entity.Property(e => e.IdNivelesPrioridad).HasColumnName("idNivelesPrioridad");
            entity.Property(e => e.NivelActual)
                .HasPrecision(4, 2)
                .HasColumnName("nivel_actual");
            entity.Property(e => e.NivelRequerido)
                .HasPrecision(4, 2)
                .HasColumnName("nivel_requerido");
        });

        modelBuilder.Entity<CategoriasCompetencia>(entity =>
        {
            entity.HasKey(e => e.IdCategoriasCompetencia).HasName("PRIMARY");

            entity.ToTable("categorias_competencia");

            entity.Property(e => e.IdCategoriasCompetencia).HasColumnName("idCategoriasCompetencia");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .HasColumnName("descripcion");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.NombreCategoria)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("nombre_categoria");
        });

        modelBuilder.Entity<EstadosDominio>(entity =>
        {
            entity.HasKey(e => e.IdEstadosDominio).HasName("PRIMARY");

            entity.ToTable("estados_dominio");

            entity.Property(e => e.IdEstadosDominio).HasColumnName("idEstadosDominio");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .HasColumnName("descripcion");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.NombreEstado)
                .HasMaxLength(90)
                .HasColumnName("nombre_estado");
        });

        modelBuilder.Entity<MapaCompetenciasEstudiante>(entity =>
        {
            entity.HasKey(e => e.IdMapaCompetenciasEstudiante).HasName("PRIMARY");

            entity.ToTable("mapa_competencias_estudiante");

            entity.HasIndex(e => e.IdCompetencias, "fk_mapa_competencias_estudiante_Competencias1_idx");

            entity.HasIndex(e => e.IdEstadosDominio, "fk_mapa_competencias_estudiante_estados_dominio1_idx");

            entity.Property(e => e.IdMapaCompetenciasEstudiante).HasColumnName("idMapaCompetenciasEstudiante");
            entity.Property(e => e.Confianza)
                .HasPrecision(4, 2)
                .HasColumnName("confianza");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.FechaEvaluacion)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_evaluacion");
            entity.Property(e => e.IdCompetencias).HasColumnName("idCompetencias");
            entity.Property(e => e.IdEstadosDominio).HasColumnName("idEstadosDominio");
            entity.Property(e => e.IdEstudiante)
                .IsRequired()
                .HasMaxLength(12)
                .HasColumnName("idEstudiante");
            entity.Property(e => e.NivelDominio)
                .HasPrecision(4, 2)
                .HasColumnName("nivel_dominio");
        });

        modelBuilder.Entity<NivelesPrioridad>(entity =>
        {
            entity.HasKey(e => e.IdNivelesPrioridad).HasName("PRIMARY");

            entity.ToTable("niveles_prioridad");

            entity.Property(e => e.IdNivelesPrioridad).HasColumnName("idNivelesPrioridad");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.NombrePrioridad)
                .HasMaxLength(90)
                .HasColumnName("nombre_prioridad");
            entity.Property(e => e.ValorPrioridad).HasColumnName("valor_prioridad");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}