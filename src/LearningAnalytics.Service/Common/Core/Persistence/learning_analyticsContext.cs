// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using LearningAnalytics.Service.Domain.Learning;
using Microsoft.EntityFrameworkCore;

namespace LearningAnalytics.Service.Common.Core.Persistence;

public partial class learning_analyticsContext : DbContext
{
    public learning_analyticsContext(DbContextOptions<learning_analyticsContext> options)
        : base(options)
    {
    }

    public virtual DbSet<EventosAprendizaje> EventosAprendizaje { get; set; }

    public virtual DbSet<MetricasCompromiso> MetricasCompromiso { get; set; }

    public virtual DbSet<SesionesAprendizaje> SesionesAprendizaje { get; set; }

    public virtual DbSet<TipoEvento> TipoEvento { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<EventosAprendizaje>(entity =>
        {
            entity.HasKey(e => e.IdEventosAprendizaje).HasName("PRIMARY");

            entity.ToTable("eventos_aprendizaje");

            entity.HasIndex(e => e.IdTipoEvento, "fk_eventos_aprendizaje_TipoEvento_idx");

            entity.Property(e => e.IdEventosAprendizaje).HasColumnName("idEventosAprendizaje");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.FechaEvento)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_evento");
            entity.Property(e => e.IdContenido).HasColumnName("idContenido");
            entity.Property(e => e.IdEstudiante)
                .IsRequired()
                .HasMaxLength(12)
                .HasColumnName("idEstudiante");
            entity.Property(e => e.IdTipoEvento).HasColumnName("idTipoEvento");
            entity.Property(e => e.MetadatosJson)
                .HasColumnType("json")
                .HasColumnName("metadatos_json");

            entity.HasOne(d => d.IdTipoEventoNavigation).WithMany(p => p.EventosAprendizaje)
                .HasForeignKey(d => d.IdTipoEvento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_eventos_aprendizaje_TipoEvento");
        });

        modelBuilder.Entity<MetricasCompromiso>(entity =>
        {
            entity.HasKey(e => e.IdMetricasCompromiso).HasName("PRIMARY");

            entity.ToTable("metricas_compromiso");

            entity.Property(e => e.IdMetricasCompromiso).HasColumnName("idMetricasCompromiso");
            entity.Property(e => e.ContenidoCompletado).HasColumnName("contenido_completado");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.FechaCalculo)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_calculo");
            entity.Property(e => e.IdEstudiante)
                .IsRequired()
                .HasMaxLength(12)
                .HasColumnName("idEstudiante");
            entity.Property(e => e.PuntajeCompromiso)
                .HasPrecision(5, 2)
                .HasDefaultValueSql("'0.00'")
                .HasColumnName("puntaje_compromiso");
            entity.Property(e => e.TiempoTotalMinutos).HasColumnName("tiempo_total_minutos");
        });

        modelBuilder.Entity<SesionesAprendizaje>(entity =>
        {
            entity.HasKey(e => e.IdSesionesAprendizaje).HasName("PRIMARY");

            entity.ToTable("sesiones_aprendizaje");

            entity.Property(e => e.IdSesionesAprendizaje).HasColumnName("idSesionesAprendizaje");
            entity.Property(e => e.ActividadesCompletadas).HasColumnName("actividades_completadas");
            entity.Property(e => e.DuracionMinutos).HasColumnName("duracion_minutos");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.FechaFin)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_fin");
            entity.Property(e => e.FechaInicio)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_inicio");
            entity.Property(e => e.IdEstudiante)
                .IsRequired()
                .HasMaxLength(12)
                .HasColumnName("idEstudiante");
        });

        modelBuilder.Entity<TipoEvento>(entity =>
        {
            entity.HasKey(e => e.IdTipoEvento).HasName("PRIMARY");

            entity.ToTable("tipo_evento");

            entity.Property(e => e.IdTipoEvento).HasColumnName("idTipoEvento");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .HasColumnName("descripcion");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.NombreEvento)
                .HasMaxLength(90)
                .HasColumnName("nombre_evento");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}