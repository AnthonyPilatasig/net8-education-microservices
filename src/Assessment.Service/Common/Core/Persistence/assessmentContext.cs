// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Assessment.Service.Domain.Assessment;
using Microsoft.EntityFrameworkCore;

namespace Assessment.Service.Common.Core.Persistence;

public partial class assessmentContext : DbContext
{
    public assessmentContext(DbContextOptions<assessmentContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Evaluaciones> Evaluaciones { get; set; }

    public virtual DbSet<Preguntas> Preguntas { get; set; }

    public virtual DbSet<ResultadosEvaluacion> ResultadosEvaluacion { get; set; }

    public virtual DbSet<TiposEvaluacion> TiposEvaluacion { get; set; }

    public virtual DbSet<TiposPregunta> TiposPregunta { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<Evaluaciones>(entity =>
        {
            entity.HasKey(e => e.IdEvaluaciones).HasName("PRIMARY");

            entity.ToTable("evaluaciones");

            entity.HasIndex(e => e.IdNivelesDificultad, "fk_evaluaciones_niveles_dificultad1_idx");

            entity.HasIndex(e => e.IdTiposEvaluacion, "fk_evaluaciones_tipos_evaluacion_idx");

            entity.Property(e => e.IdEvaluaciones).HasColumnName("idEvaluaciones");
            entity.Property(e => e.CodigoEvaluacion)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("codigo_evaluacion");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.IdNivelesDificultad).HasColumnName("idNivelesDificultad");
            entity.Property(e => e.IdTiposEvaluacion).HasColumnName("idTiposEvaluacion");
            entity.Property(e => e.TiempoEstimadoMinutos).HasColumnName("tiempo_estimado_minutos");
            entity.Property(e => e.Titulo)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("titulo");

            entity.HasOne(d => d.IdTiposEvaluacionNavigation).WithMany(p => p.Evaluaciones)
                .HasForeignKey(d => d.IdTiposEvaluacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_evaluaciones_tipos_evaluacion");
        });

        modelBuilder.Entity<Preguntas>(entity =>
        {
            entity.HasKey(e => e.IdPreguntas).HasName("PRIMARY");

            entity.ToTable("preguntas");

            entity.HasIndex(e => e.IdEvaluaciones, "fk_preguntas_evaluaciones1_idx");

            entity.HasIndex(e => e.IdTiposPregunta, "fk_preguntas_tipos_pregunta1_idx");

            entity.Property(e => e.IdPreguntas).HasColumnName("idPreguntas");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.IdEvaluaciones).HasColumnName("idEvaluaciones");
            entity.Property(e => e.IdTiposPregunta).HasColumnName("idTiposPregunta");
            entity.Property(e => e.OrdenPregunta).HasColumnName("orden_pregunta");
            entity.Property(e => e.PreguntasJson)
                .HasColumnType("json")
                .HasColumnName("preguntas_json");
            entity.Property(e => e.RespuestaCorrecta)
                .HasMaxLength(500)
                .HasColumnName("respuesta_correcta");
            entity.Property(e => e.TextoPregunta)
                .HasColumnType("text")
                .HasColumnName("texto_pregunta");

            entity.HasOne(d => d.IdEvaluacionesNavigation).WithMany(p => p.Preguntas)
                .HasForeignKey(d => d.IdEvaluaciones)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_preguntas_evaluaciones1");

            entity.HasOne(d => d.IdTiposPreguntaNavigation).WithMany(p => p.Preguntas)
                .HasForeignKey(d => d.IdTiposPregunta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_preguntas_tipos_pregunta1");
        });

        modelBuilder.Entity<ResultadosEvaluacion>(entity =>
        {
            entity.HasKey(e => e.IdResultadosEvaluacion).HasName("PRIMARY");

            entity.ToTable("resultados_evaluacion");

            entity.HasIndex(e => e.IdEvaluaciones, "fk_resultados_evaluacion_evaluaciones1_idx");

            entity.Property(e => e.IdResultadosEvaluacion).HasColumnName("idResultadosEvaluacion");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.FechaCompletacion)
                .HasColumnType("timestamp")
                .HasColumnName("fecha_completacion");
            entity.Property(e => e.IdEstudiante)
                .IsRequired()
                .HasMaxLength(12)
                .HasColumnName("idEstudiante");
            entity.Property(e => e.IdEvaluaciones).HasColumnName("idEvaluaciones");
            entity.Property(e => e.PuntajeMaximo)
                .HasPrecision(6, 2)
                .HasColumnName("puntaje_maximo");
            entity.Property(e => e.PuntajeObtenido)
                .HasPrecision(6, 2)
                .HasColumnName("puntaje_obtenido");
            entity.Property(e => e.TiempoEmpleadoMinutos).HasColumnName("tiempo_empleado_minutos");

            entity.HasOne(d => d.IdEvaluacionesNavigation).WithMany(p => p.ResultadosEvaluacion)
                .HasForeignKey(d => d.IdEvaluaciones)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_resultados_evaluacion_evaluaciones1");
        });

        modelBuilder.Entity<TiposEvaluacion>(entity =>
        {
            entity.HasKey(e => e.IdTiposEvaluacion).HasName("PRIMARY");

            entity.ToTable("tipos_evaluacion");

            entity.Property(e => e.IdTiposEvaluacion).HasColumnName("idTiposEvaluacion");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .HasColumnName("descripcion");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.NombreTipo)
                .IsRequired()
                .HasMaxLength(90)
                .HasColumnName("nombre_tipo");
        });

        modelBuilder.Entity<TiposPregunta>(entity =>
        {
            entity.HasKey(e => e.IdTiposPregunta).HasName("PRIMARY");

            entity.ToTable("tipos_pregunta");

            entity.Property(e => e.IdTiposPregunta).HasColumnName("idTiposPregunta");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .HasColumnName("descripcion");
            entity.Property(e => e.EsActivo).HasColumnName("es_activo");
            entity.Property(e => e.NombreTipo)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("nombre_tipo");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}